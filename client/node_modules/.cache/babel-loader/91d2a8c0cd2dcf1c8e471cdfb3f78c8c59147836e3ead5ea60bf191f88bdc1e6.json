{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const getNotesAsync = createAsyncThunk(\"notes/getNotesAsync\", async (text = \"\") => {\n  const res = await axios.get(`${process.env.REACT_APP_BASE_ENDPOINT}/notes?text=${text}`);\n  return res.data;\n});\nexport const addNoteAsync = createAsyncThunk(\"notes/addNotesAsync\", async item => {\n  const res = await axios.post(`${process.env.REACT_APP_BASE_ENDPOINT}/notes`, item);\n  return res.data;\n});\nexport const updateNoteAsync = createAsyncThunk(\"notes/updateNoteAsync\", async item => {\n  const res = await axios.put(`${process.env.REACT_APP_BASE_ENDPOINT}/notes`, item);\n  return res.data;\n});\nexport const notesSlice = createSlice({\n  name: \"notes\",\n  initialState: {\n    items: [],\n    selectedItem: {\n      id: \"\",\n      title: \"\",\n      body: \"\",\n      color: \"f94144\"\n    }\n  },\n  reducers: {\n    selectNote: (state, action) => {\n      const {\n        id\n      } = action.payload;\n      const item = state.items.find(x => x.id === id);\n      state.selectedItem = item;\n    }\n  },\n  extraReducers: {\n    [getNotesAsync.fulfilled]: (state, action) => {\n      state.items = action.payload;\n    },\n    [addNoteAsync.fulfilled]: (state, action) => {\n      state.items.push(action.payload);\n    },\n    [updateNoteAsync.fulfilled]: (state, action) => {\n      const {\n        id\n      } = action.payload;\n      let itemIndex = state.items.findIndex(x => x.id === id);\n      state.items[itemIndex] = action.payload;\n      state.selectedItem = {\n        id: \"\",\n        title: \"\",\n        body: \"\",\n        color: \"f94144\"\n      };\n    }\n  }\n});\nexport const {\n  selectNote\n} = notesSlice.actions;\nexport default notesSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","getNotesAsync","text","res","get","process","env","REACT_APP_BASE_ENDPOINT","data","addNoteAsync","item","post","updateNoteAsync","put","notesSlice","name","initialState","items","selectedItem","id","title","body","color","reducers","selectNote","state","action","payload","find","x","extraReducers","fulfilled","push","itemIndex","findIndex","actions","reducer"],"sources":["C:/Users/alper/Desktop/My Websites/notes-app/client/src/redux/notes/notesSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const getNotesAsync = createAsyncThunk(\r\n  \"notes/getNotesAsync\",\r\n  async (text = \"\") => {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_BASE_ENDPOINT}/notes?text=${text}`\r\n    );\r\n\r\n    return res.data;\r\n  }\r\n);\r\n\r\nexport const addNoteAsync = createAsyncThunk(\r\n  \"notes/addNotesAsync\",\r\n  async (item) => {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_BASE_ENDPOINT}/notes`,\r\n      item\r\n    );\r\n\r\n    return res.data;\r\n  }\r\n);\r\n\r\nexport const updateNoteAsync = createAsyncThunk(\r\n  \"notes/updateNoteAsync\",\r\n  async (item) => {\r\n    const res = await axios.put(\r\n      `${process.env.REACT_APP_BASE_ENDPOINT}/notes`,\r\n      item\r\n    );\r\n\r\n    return res.data;\r\n  }\r\n);\r\n\r\nexport const notesSlice = createSlice({\r\n  name: \"notes\",\r\n  initialState: {\r\n    items: [],\r\n    selectedItem: {\r\n      id: \"\",\r\n      title: \"\",\r\n      body: \"\",\r\n      color: \"f94144\",\r\n    },\r\n  },\r\n  reducers: {\r\n    selectNote: (state, action) => {\r\n      const { id } = action.payload;\r\n\r\n      const item = state.items.find((x) => x.id === id);\r\n      state.selectedItem = item;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [getNotesAsync.fulfilled]: (state, action) => {\r\n      state.items = action.payload;\r\n    },\r\n    [addNoteAsync.fulfilled]: (state, action) => {\r\n      state.items.push(action.payload);\r\n    },\r\n    [updateNoteAsync.fulfilled]: (state, action) => {\r\n      const { id } = action.payload;\r\n\r\n      let itemIndex = state.items.findIndex((x) => x.id === id);\r\n      state.items[itemIndex] = action.payload;\r\n\r\n      state.selectedItem = { id: \"\", title: \"\", body: \"\", color: \"f94144\" };\r\n    },\r\n  },\r\n});\r\n\r\nexport const { selectNote } = notesSlice.actions;\r\n\r\nexport default notesSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,aAAa,GAAGF,gBAAgB,CAC3C,qBAAqB,EACrB,OAAOG,IAAI,GAAG,EAAE,KAAK;EACnB,MAAMC,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAG,CACxB,GAAEC,OAAO,CAACC,GAAG,CAACC,uBAAwB,eAAcL,IAAK,EAC5D,CAAC;EAED,OAAOC,GAAG,CAACK,IAAI;AACjB,CACF,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGV,gBAAgB,CAC1C,qBAAqB,EACrB,MAAOW,IAAI,IAAK;EACd,MAAMP,GAAG,GAAG,MAAMH,KAAK,CAACW,IAAI,CACzB,GAAEN,OAAO,CAACC,GAAG,CAACC,uBAAwB,QAAO,EAC9CG,IACF,CAAC;EAED,OAAOP,GAAG,CAACK,IAAI;AACjB,CACF,CAAC;AAED,OAAO,MAAMI,eAAe,GAAGb,gBAAgB,CAC7C,uBAAuB,EACvB,MAAOW,IAAI,IAAK;EACd,MAAMP,GAAG,GAAG,MAAMH,KAAK,CAACa,GAAG,CACxB,GAAER,OAAO,CAACC,GAAG,CAACC,uBAAwB,QAAO,EAC9CG,IACF,CAAC;EAED,OAAOP,GAAG,CAACK,IAAI;AACjB,CACF,CAAC;AAED,OAAO,MAAMM,UAAU,GAAGhB,WAAW,CAAC;EACpCiB,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,YAAY,EAAE;MACZC,EAAE,EAAE,EAAE;MACNC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE;IACT;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAM;QAAEP;MAAG,CAAC,GAAGO,MAAM,CAACC,OAAO;MAE7B,MAAMjB,IAAI,GAAGe,KAAK,CAACR,KAAK,CAACW,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACV,EAAE,KAAKA,EAAE,CAAC;MACjDM,KAAK,CAACP,YAAY,GAAGR,IAAI;IAC3B;EACF,CAAC;EACDoB,aAAa,EAAE;IACb,CAAC7B,aAAa,CAAC8B,SAAS,GAAG,CAACN,KAAK,EAAEC,MAAM,KAAK;MAC5CD,KAAK,CAACR,KAAK,GAAGS,MAAM,CAACC,OAAO;IAC9B,CAAC;IACD,CAAClB,YAAY,CAACsB,SAAS,GAAG,CAACN,KAAK,EAAEC,MAAM,KAAK;MAC3CD,KAAK,CAACR,KAAK,CAACe,IAAI,CAACN,MAAM,CAACC,OAAO,CAAC;IAClC,CAAC;IACD,CAACf,eAAe,CAACmB,SAAS,GAAG,CAACN,KAAK,EAAEC,MAAM,KAAK;MAC9C,MAAM;QAAEP;MAAG,CAAC,GAAGO,MAAM,CAACC,OAAO;MAE7B,IAAIM,SAAS,GAAGR,KAAK,CAACR,KAAK,CAACiB,SAAS,CAAEL,CAAC,IAAKA,CAAC,CAACV,EAAE,KAAKA,EAAE,CAAC;MACzDM,KAAK,CAACR,KAAK,CAACgB,SAAS,CAAC,GAAGP,MAAM,CAACC,OAAO;MAEvCF,KAAK,CAACP,YAAY,GAAG;QAAEC,EAAE,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAS,CAAC;IACvE;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE;AAAW,CAAC,GAAGV,UAAU,CAACqB,OAAO;AAEhD,eAAerB,UAAU,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}